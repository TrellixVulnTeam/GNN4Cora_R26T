> Seed: 6666666
> device: cuda:0
> Loading DataSet from data/cora/
> Data sent to cuda:0
> view: both
> num_nodes: 2708, num_edges: [10556]
> num_feats: 1433, num_classes: 7
> num_samples: training = 270, validation = 812, test = 1626
> train_set_imbalance: {0: 28, 1: 35, 2: 79, 3: 50, 4: 22, 5: 20, 6: 36}
> Initializing the Training Model: GAT
> Model Structure:
GAT(
  (proj_fc): Linear(in_features=1433, out_features=128, bias=False)
  (embed_fc): Linear(in_features=128, out_features=128, bias=False)
  (layers): ModuleList(
    (0): ModuleList(
      (0): MultiHeadCGaANLayer(
        (cGaANs): ModuleList(
          (0): CGaANLayer(
            (Wa): Linear(in_features=128, out_features=128, bias=False)
            (att_out_fc_l): Linear(in_features=128, out_features=1, bias=False)
            (att_out_fc_r): Linear(in_features=128, out_features=1, bias=False)
          )
          (1): CGaANLayer(
            (Wa): Linear(in_features=128, out_features=128, bias=False)
            (att_out_fc_l): Linear(in_features=128, out_features=1, bias=False)
            (att_out_fc_r): Linear(in_features=128, out_features=1, bias=False)
          )
          (2): CGaANLayer(
            (Wa): Linear(in_features=128, out_features=128, bias=False)
            (att_out_fc_l): Linear(in_features=128, out_features=1, bias=False)
            (att_out_fc_r): Linear(in_features=128, out_features=1, bias=False)
          )
        )
      )
      (1): MultiHeadCGaANLayer(
        (cGaANs): ModuleList(
          (0): CGaANLayer(
            (Wa): Linear(in_features=128, out_features=128, bias=False)
            (att_out_fc_l): Linear(in_features=128, out_features=1, bias=False)
            (att_out_fc_r): Linear(in_features=128, out_features=1, bias=False)
          )
          (1): CGaANLayer(
            (Wa): Linear(in_features=128, out_features=128, bias=False)
            (att_out_fc_l): Linear(in_features=128, out_features=1, bias=False)
            (att_out_fc_r): Linear(in_features=128, out_features=1, bias=False)
          )
          (2): CGaANLayer(
            (Wa): Linear(in_features=128, out_features=128, bias=False)
            (att_out_fc_l): Linear(in_features=128, out_features=1, bias=False)
            (att_out_fc_r): Linear(in_features=128, out_features=1, bias=False)
          )
        )
      )
    )
  )
  (tran_fc): Linear(in_features=512, out_features=7, bias=True)
)
> Model sent to cuda:0
> Constructing the Optimizer: ADAM
> Using CrossEntropyLoss as the Loss Function.

learning_rate = 0.01, epochs = 75
eval_freq = 5, optimizer = ADAM

Start Training!
------------------------------------------------------------------------
Training Round 1: loss = 2.692621, time_cost = 1.6338 sec, acc = 10.0000%
Training Round 2: loss = 2.021471, time_cost = 0.2217 sec, acc = 33.7037%
Training Round 3: loss = 3.091063, time_cost = 0.2284 sec, acc = 34.8148%
Training Round 4: loss = 1.346510, time_cost = 0.2210 sec, acc = 57.4074%
Training Round 5: loss = 0.626263, time_cost = 0.2218 sec, acc = 81.8519%
!!! Evaluation: valid_acc = 61.6995%, test_acc = 61.1316%
Training Round 6: loss = 0.535751, time_cost = 0.2372 sec, acc = 79.6296%
Training Round 7: loss = 0.265197, time_cost = 0.2399 sec, acc = 94.4444%
Training Round 8: loss = 0.171643, time_cost = 0.2200 sec, acc = 96.6667%
Training Round 9: loss = 0.118605, time_cost = 0.2203 sec, acc = 98.1481%
Training Round 10: loss = 0.078484, time_cost = 0.2250 sec, acc = 98.5185%
!!! Evaluation: valid_acc = 77.0936%, test_acc = 79.2743%
Training Round 11: loss = 0.053107, time_cost = 0.2197 sec, acc = 98.8889%
Training Round 12: loss = 0.031733, time_cost = 0.2263 sec, acc = 99.2593%
Training Round 13: loss = 0.021277, time_cost = 0.2313 sec, acc = 99.6296%
Training Round 14: loss = 0.016045, time_cost = 0.2426 sec, acc = 99.6296%
Training Round 15: loss = 0.010906, time_cost = 0.2650 sec, acc = 99.6296%
!!! Evaluation: valid_acc = 79.8030%, test_acc = 81.7343%
Model: model_save/20220529_21_20_46.pth has been saved since it achieves higher validation accuracy.
Training Round 16: loss = 0.009173, time_cost = 0.2369 sec, acc = 99.6296%
Training Round 17: loss = 0.007169, time_cost = 0.2255 sec, acc = 100.0000%
Training Round 18: loss = 0.005378, time_cost = 0.2231 sec, acc = 100.0000%
Training Round 19: loss = 0.003509, time_cost = 0.2196 sec, acc = 100.0000%
Training Round 20: loss = 0.003087, time_cost = 0.2401 sec, acc = 100.0000%
!!! Evaluation: valid_acc = 80.9113%, test_acc = 82.1033%
Model: model_save/20220529_21_20_46.pth has been saved since it achieves higher validation accuracy.
Training Round 21: loss = 0.002819, time_cost = 0.2323 sec, acc = 100.0000%
Training Round 22: loss = 0.002638, time_cost = 0.2335 sec, acc = 100.0000%
Training Round 23: loss = 0.002907, time_cost = 0.2610 sec, acc = 100.0000%
Training Round 24: loss = 0.003299, time_cost = 0.2236 sec, acc = 100.0000%
Training Round 25: loss = 0.004376, time_cost = 0.2219 sec, acc = 100.0000%
!!! Evaluation: valid_acc = 80.5419%, test_acc = 81.9803%
Training Round 26: loss = 0.005546, time_cost = 0.2383 sec, acc = 100.0000%
Training Round 27: loss = 0.006662, time_cost = 0.2298 sec, acc = 100.0000%
Training Round 28: loss = 0.007457, time_cost = 0.2246 sec, acc = 100.0000%
Training Round 29: loss = 0.008877, time_cost = 0.2401 sec, acc = 100.0000%
Training Round 30: loss = 0.010111, time_cost = 0.2212 sec, acc = 100.0000%
!!! Evaluation: valid_acc = 82.0197%, test_acc = 82.2878%
Model: model_save/20220529_21_20_46.pth has been saved since it achieves higher validation accuracy.
Training Round 31: loss = 0.011417, time_cost = 0.2249 sec, acc = 100.0000%
Training Round 32: loss = 0.013076, time_cost = 0.2339 sec, acc = 100.0000%
Training Round 33: loss = 0.013902, time_cost = 0.2259 sec, acc = 100.0000%
Training Round 34: loss = 0.015976, time_cost = 0.2347 sec, acc = 100.0000%
Training Round 35: loss = 0.016586, time_cost = 0.2251 sec, acc = 100.0000%
!!! Evaluation: valid_acc = 81.1576%, test_acc = 83.1488%
Training Round 36: loss = 0.016891, time_cost = 0.2459 sec, acc = 100.0000%
Training Round 37: loss = 0.017236, time_cost = 0.2294 sec, acc = 100.0000%
Training Round 38: loss = 0.016845, time_cost = 0.2197 sec, acc = 100.0000%
Training Round 39: loss = 0.016575, time_cost = 0.2401 sec, acc = 100.0000%
Training Round 40: loss = 0.019252, time_cost = 0.2316 sec, acc = 100.0000%
!!! Evaluation: valid_acc = 81.7734%, test_acc = 83.4563%
Training Round 41: loss = 0.017126, time_cost = 0.2284 sec, acc = 100.0000%
Training Round 42: loss = 0.016928, time_cost = 0.2425 sec, acc = 100.0000%
Training Round 43: loss = 0.016248, time_cost = 0.2275 sec, acc = 100.0000%
Training Round 44: loss = 0.015739, time_cost = 0.2250 sec, acc = 100.0000%
Training Round 45: loss = 0.014021, time_cost = 0.2250 sec, acc = 100.0000%
!!! Evaluation: valid_acc = 81.7734%, test_acc = 82.9643%
Training Round 46: loss = 0.014927, time_cost = 0.2281 sec, acc = 100.0000%
Training Round 47: loss = 0.016140, time_cost = 0.2192 sec, acc = 100.0000%
Training Round 48: loss = 0.014761, time_cost = 0.2350 sec, acc = 100.0000%
Training Round 49: loss = 0.014536, time_cost = 0.2249 sec, acc = 100.0000%
Training Round 50: loss = 0.014996, time_cost = 0.2351 sec, acc = 100.0000%
!!! Evaluation: valid_acc = 82.0197%, test_acc = 83.0873%
Training Round 51: loss = 0.015717, time_cost = 0.2224 sec, acc = 100.0000%
Training Round 52: loss = 0.015156, time_cost = 0.2275 sec, acc = 100.0000%
Training Round 53: loss = 0.013707, time_cost = 0.2255 sec, acc = 100.0000%
Training Round 54: loss = 0.014614, time_cost = 0.2349 sec, acc = 100.0000%
Training Round 55: loss = 0.014657, time_cost = 0.2301 sec, acc = 100.0000%
!!! Evaluation: valid_acc = 82.0197%, test_acc = 82.9028%
Training Round 56: loss = 0.016007, time_cost = 0.2279 sec, acc = 100.0000%
Training Round 57: loss = 0.015916, time_cost = 0.2381 sec, acc = 100.0000%
Training Round 58: loss = 0.015403, time_cost = 0.2251 sec, acc = 100.0000%
Training Round 59: loss = 0.014565, time_cost = 0.2370 sec, acc = 100.0000%
Training Round 60: loss = 0.015487, time_cost = 0.2232 sec, acc = 100.0000%
!!! Evaluation: valid_acc = 81.2808%, test_acc = 83.2103%
Training Round 61: loss = 0.015970, time_cost = 0.2299 sec, acc = 100.0000%
Training Round 62: loss = 0.015106, time_cost = 0.2301 sec, acc = 100.0000%
Training Round 63: loss = 0.015025, time_cost = 0.2251 sec, acc = 100.0000%
Training Round 64: loss = 0.014134, time_cost = 0.2298 sec, acc = 100.0000%
Training Round 65: loss = 0.014388, time_cost = 0.2148 sec, acc = 100.0000%
!!! Evaluation: valid_acc = 81.4039%, test_acc = 83.3948%
Training Round 66: loss = 0.015376, time_cost = 0.2392 sec, acc = 100.0000%
Training Round 67: loss = 0.015200, time_cost = 0.2214 sec, acc = 100.0000%
Training Round 68: loss = 0.014820, time_cost = 0.2409 sec, acc = 100.0000%
Training Round 69: loss = 0.015346, time_cost = 0.2277 sec, acc = 100.0000%
Training Round 70: loss = 0.015539, time_cost = 0.2249 sec, acc = 100.0000%
!!! Evaluation: valid_acc = 81.0345%, test_acc = 83.1488%
Training Round 71: loss = 0.016231, time_cost = 0.2301 sec, acc = 100.0000%
Training Round 72: loss = 0.014632, time_cost = 0.2501 sec, acc = 100.0000%
Training Round 73: loss = 0.014773, time_cost = 0.2198 sec, acc = 100.0000%
Training Round 74: loss = 0.016129, time_cost = 0.2231 sec, acc = 100.0000%
Training Round 75: loss = 0.014837, time_cost = 0.2321 sec, acc = 100.0000%
!!! Evaluation: valid_acc = 82.1429%, test_acc = 82.9643%
Model: model_save/20220529_21_20_46.pth has been saved since it achieves higher validation accuracy.
> Training finished.

> device: cuda:0
> Loading DataSet from data/cora/
> Data sent to cuda:0
> view: both
> num_nodes: 2708, num_edges: [10556]
> num_feats: 1433, num_classes: 7
> num_samples: training = 270, validation = 812, test = 1626
> train_set_imbalance: {0: 28, 1: 35, 2: 79, 3: 50, 4: 22, 5: 20, 6: 36}
> Loading model_save/20220529_21_20_46.pth
> Model Structure:
GAT(
  (proj_fc): Linear(in_features=1433, out_features=128, bias=False)
  (embed_fc): Linear(in_features=128, out_features=128, bias=False)
  (layers): ModuleList(
    (0): ModuleList(
      (0): MultiHeadCGaANLayer(
        (cGaANs): ModuleList(
          (0): CGaANLayer(
            (Wa): Linear(in_features=128, out_features=128, bias=False)
            (att_out_fc_l): Linear(in_features=128, out_features=1, bias=False)
            (att_out_fc_r): Linear(in_features=128, out_features=1, bias=False)
          )
          (1): CGaANLayer(
            (Wa): Linear(in_features=128, out_features=128, bias=False)
            (att_out_fc_l): Linear(in_features=128, out_features=1, bias=False)
            (att_out_fc_r): Linear(in_features=128, out_features=1, bias=False)
          )
          (2): CGaANLayer(
            (Wa): Linear(in_features=128, out_features=128, bias=False)
            (att_out_fc_l): Linear(in_features=128, out_features=1, bias=False)
            (att_out_fc_r): Linear(in_features=128, out_features=1, bias=False)
          )
        )
      )
      (1): MultiHeadCGaANLayer(
        (cGaANs): ModuleList(
          (0): CGaANLayer(
            (Wa): Linear(in_features=128, out_features=128, bias=False)
            (att_out_fc_l): Linear(in_features=128, out_features=1, bias=False)
            (att_out_fc_r): Linear(in_features=128, out_features=1, bias=False)
          )
          (1): CGaANLayer(
            (Wa): Linear(in_features=128, out_features=128, bias=False)
            (att_out_fc_l): Linear(in_features=128, out_features=1, bias=False)
            (att_out_fc_r): Linear(in_features=128, out_features=1, bias=False)
          )
          (2): CGaANLayer(
            (Wa): Linear(in_features=128, out_features=128, bias=False)
            (att_out_fc_l): Linear(in_features=128, out_features=1, bias=False)
            (att_out_fc_r): Linear(in_features=128, out_features=1, bias=False)
          )
        )
      )
    )
  )
  (tran_fc): Linear(in_features=512, out_features=7, bias=True)
)
> Model sent to cuda:0
> Evaluation Results: valid_acc = 81.7734%, test_acc = 83.1488%
> Evaluation finished.
